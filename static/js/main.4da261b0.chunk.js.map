{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","console","log","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","pushState","onClick","Login","PrivateRoute","Component","component","rest","render","props","Forgot","message","setMessage","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","UpdateProfile","ForgotPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4da261b0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n//where we will put the config values from firebase.\r\n//when in dev mode, we can use these environmental variables\r\n//when in production mode, we can set it up to use the production enviromental\r\n//variables without changing code\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    // databaseUrl: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n//gives us our authuntication instance\r\nexport const auth = app.auth();\r\nexport default app;","\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { auth } from \"../firebase\";\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    console.log(process.env.REACT_APP_FIREBASE_API_KEY);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email);\r\n    }\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password);\r\n    }\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        })\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory;\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n\r\n        }\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n        } catch {\r\n            setError('Failed to create an account');\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required></Form.Control>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" >Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\" >Log In</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState('');\r\n    const { currentUser, logout } = useAuth();\r\n    const history = useHistory();\r\n\r\n    async function handleLogout() {\r\n        setError('');\r\n        try {\r\n            await logout();\r\n            history.pushState('/login');\r\n        } catch { setError('Failed to logout'); }\r\n    }\r\n    return (\r\n        <><Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center\">Profile</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <strong>Email: {currentUser.email}</strong>\r\n                <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}> Log Out</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Login() {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n        } catch {\r\n            setError('Failed to sign in');\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" >Log In</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\" >Forgot Password</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\" >Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth();\r\n    return (\r\n        <Route    {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}>\r\n\r\n        </Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Forgot() {\r\n\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setMessage('');\r\n            setError('');\r\n            setLoading(true);\r\n            await resetPassword(emailRef.current.value);\r\n            setMessage('Check your inbox for further instructions');\r\n        } catch {\r\n            setError('Failed to reset password');\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" >Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\" >Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\" >Sign Up</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Signup() {\r\n\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { currentUser, updateEmail, updatePassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory;\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n        }\r\n        const promises = [];\r\n        setLoading(true);\r\n        setError('');\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value));\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value));\r\n        }\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                history.push('/')\r\n            }).catch(() => {\r\n                setError('Failed to update account')\r\n            }).finally(() => {\r\n                setLoading(false)\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"></Form.Control>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" >Update Profile</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\" >Cancel</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Signup from \"./Signup\";\r\nimport { Container } from 'react-bootstrap';\r\nimport { AuthProvider } from '../contexts/AuthContext';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Container className=\"d-flex alighn-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <div className=\"w-100 text-center mt-2\">\r\n              <Link to=\"/login\" >Login</Link>\r\n              <Link to=\"/signup\" >Sign up</Link>\r\n              <Link to=\"/update-profile\" >Update</Link>\r\n            </div>\r\n            <Switch>\r\n              {/* only match this slash path */}\r\n              <PrivateRoute exact path=\"/\" component={Dashboard}></PrivateRoute>\r\n              <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile}></PrivateRoute>\r\n              <Route path=\"/signup\" component={Signup}></Route>\r\n              <Route path=\"/login\" component={Login}></Route>\r\n              <Route path=\"/forgot-password\" component={ForgotPassword}></Route>\r\n\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n        <p>slkkjf</p>\r\n\r\n      </div>\r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}