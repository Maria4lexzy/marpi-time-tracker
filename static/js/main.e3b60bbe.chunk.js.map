{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","console","log","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","href","Dashboard","Login","App","Container","style","minHeight","maxWidth","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3b60bbe.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n//where we will put the config values from firebase.\r\n//when in dev mode, we can use these environmental variables\r\n//when in production mode, we can set it up to use the production enviromental\r\n//variables without changing code\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    // databaseUrl: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n//gives us our authuntication instance\r\nexport const auth = app.auth();\r\nexport default app;","\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { auth } from \"../firebase\";\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    console.log(process.env.REACT_APP_FIREBASE_API_KEY);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        })\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory;\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n\r\n        }\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n        } catch {\r\n            setError('Failed to create an account');\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required></Form.Control>\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" >Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <a href=\"#\">Log In</a>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div>\r\n            Dboard\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n        } catch {\r\n            setError('Failed to sign in');\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\" >Log In</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <a href=\"#\">Log In</a>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Signup from \"./components/Signup\";\r\nimport { Container } from 'react-bootstrap';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard';\r\nimport Login from './components/Login';\r\nfunction App() {\r\n  return (\r\n\r\n    <Container className=\"d-flex alighn-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              {/* only match this slash path */}\r\n              <Route exact path=\"/\" component={Dashboard}></Route>\r\n              <Route path=\"/signup\" component={Signup}></Route>\r\n              <Route path=\"/login\" component={Login}></Route>\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n        <p>slkkjf</p>\r\n      </div>\r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}