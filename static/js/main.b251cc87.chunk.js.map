{"version":3,"sources":["utils/firestore.js","constants/routes.js","components/SignIn.js","components/CreateUser.js","providers/UserProvider.jsx","components/Firebase/ProfilePage.js","components/Firebase/PasswordReset.js","components/EmailLink.js","components/Firebase/Firebase.js","components/App.js","reportWebVitals.js","redux/CalendarSlice.js","redux/configureStore.js","index.js"],"names":["displayName","roles","firebase","initializeApp","apiKey","process","authDomain","databaseUrl","projectId","storageBucket","messagingSenderId","appId","auth","firestore","provider","GoogleAuthProvider","generateUserDocument","user","a","userRef","doc","uid","get","exists","collection","orderBy","limit","then","snapshot","lastWorkingNumber","docs","forEach","data","workingNumber","writeUserToDB","getUserDocument","console","log","email","set","photoURL","admin","manager","worker","error","catch","sendSignInLink","actionCodeSettings","sendSignInLinkToEmail","window","localStorage","setItem","errorCode","code","errorMessage","message","signInWithEmail_link","isSignInWithEmailLink","location","href","getItem","prompt","signInWithEmailLink","result","removeItem","createNewUser","displayN","password","rolesParam","createUserWithEmailAndPassword","signInWithEmailAndPassword","firebaseUser","CALENDAR_T","CREATE_USER","SIGN_IN","PASSWORD_FORGET","SignIn","emailRef","useRef","passwordRef","useState","setError","loading","setLoading","e","preventDefault","current","value","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","placeholder","Button","disabled","onClick","event","signInWithPopup","to","ROUTES","CreateUser","displayNameRef","passwordConfirmRef","selectedValue","setSelectedValue","useHistory","undefined","options","label","isMulti","onChange","rolesArray","element","push","marginTop","lineHeight","JSON","stringify","UserContext","createContext","UserProvider","state","componentDidMount","onAuthStateChanged","userAuth","setState","Provider","this","props","children","Component","ProfilePage","useContext","background","backgroundSize","height","width","signOut","PasswordReset","setEmail","emailHasBeenSent","action","htmlFor","name","currentTarget","EmailLink","url","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","dynamicLinkDomain","NavigationAuth","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","eventKey","NavigationNonAuth","Firebase","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","calendarSlice","createSlice","initialState","date","week","calendarTitle","viewType","reducers","currentDateAction","newDate","payload","selectedWeekAction","newWeek","currentTitleAction","newTitle","currentViewAction","newView","actions","reducer","combineReducers","calendar","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b251cc87.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nlet displayName, roles;\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseUrl: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\nexport const generateUserDocument = async (user) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n      const quersyResult = firestore.collection(\"users\").orderBy(\"workingNumber\", \"desc\").limit(1)\r\n      \r\n      quersyResult.get().then((snapshot) =>{\r\n          let lastWorkingNumber = 1000;\r\n          snapshot.docs.forEach(doc => {\r\n            lastWorkingNumber = doc.data().workingNumber;\r\n          })\r\n          writeUserToDB(user, userRef,lastWorkingNumber+1)\r\n      })\r\n     \r\n    }\r\n    return await getUserDocument(user.uid);\r\n  };\r\n\r\n  \r\n\r\n  const writeUserToDB = async (user,userRef,workingNumber) =>{\r\n    console.log(user);\r\n    const email =  user.email;\r\n    const photoURL = null;\r\n    console.log(email + photoURL + displayName + roles + workingNumber);\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        roles:{admin: roles[0],manager: roles[1],worker: roles[2]},\r\n        workingNumber\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user document\", error);\r\n    }\r\n  }\r\n\r\nconst getUserDocument = async uid => {\r\nif (!uid) return null;\r\n\r\nreturn await firestore.doc(`users/${uid}`).get().then((doc) => {\r\n    if (doc.exists) {\r\n\r\n        return doc.data();\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        return \"No such document!\";\r\n    }\r\n}).catch((error) => {\r\n    return  \"Error getting document:\", error;\r\n});\r\n}\r\n\r\n\r\nexport const sendSignInLink  = async (email, actionCodeSettings)=>{\r\n\r\n return await auth.sendSignInLinkToEmail(email, actionCodeSettings)\r\n .then(()=>{\r\n   window.localStorage.setItem('emailForSignIn', email);})\r\n   .catch((error) => {\r\n  var errorCode = error.code;\r\n  var errorMessage = error.message;\r\n  console.log(errorCode);\r\n  console.log(\"errorMessage\"+errorMessage);\r\n  return error;\r\n  // ...\r\n});\r\n}\r\nexport const signInWithEmail_link=async()=>{\r\n\r\n  if(auth.isSignInWithEmailLink(window.location.href)){\r\n    var email=window.localStorage.getItem('emailForSignIn');\r\n    if(!email){\r\n      email=window.localStorage.prompt('Please provide your email for confirmations');\r\n    }\r\n    auth.signInWithEmailLink(email, window.location.href)\r\n    .then((result) => {\r\n      // Clear email from storage.\r\n      window.localStorage.removeItem('emailForSignIn');\r\n      // You can access the new user via result.user\r\n      // Additional user info profile not available via:\r\n      // result.additionalUserInfo.profile == null\r\n      // You can check if the user is new or existing:\r\n      // result.additionalUserInfo.isNewUser\r\n    })\r\n    .catch((error) => {\r\n      // Some error occurred, you can inspect the code: error.code\r\n      // Common errors could be invalid email and invalid or expired OTPs.\r\n    });\r\n  }\r\n\r\n}\r\nexport const createNewUser = async (displayN,email,password,rolesParam) =>\r\n{\r\n    try{\r\n       displayName = displayN;\r\n       roles = rolesParam;\r\n       return await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n      }\r\n      catch(error){\r\n          console.log(error);\r\n       return error;\r\n      }\r\n}\r\n\r\nexport const signInWithEmailAndPassword = async (email, password) => {\r\n\r\nreturn await auth.signInWithEmailAndPassword(email,password)\r\n.then(function(firebaseUser) {\r\n    return firebaseUser;\r\n})\r\n.catch(function(error) {\r\n    return error;\r\n});\r\n};","export const CALENDAR = '/calendar';\r\nexport const CALENDAR_T = '/calendar-test';\r\nexport const CREATE_USER = '/create-user';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const LANDING = '/';\r\nexport const EMAIL_LINK = 'email-link';\r\n","import React, {useState, useRef} from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport {signInWithEmailAndPassword, signInWithGoogle}  from '../utils/firestore'\r\nimport * as ROUTES from '../constants/routes';\r\nimport { Form, Button, Card, Alert, Container } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport GoogleButton from 'react-google-button'\r\n\r\n\r\nconst SignIn = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n    async function handleSubmit(e) {\r\n      e.preventDefault();\r\n\r\n      try {\r\n          setError('');\r\n          setLoading(true);\r\n          await signInWithEmailAndPassword(emailRef.current.value, passwordRef.current.value);\r\n          // history.push(\"/\");\r\n      } catch {\r\n          setError('Failed to sign in');\r\n      }\r\n      setLoading(false);\r\n\r\n  }\r\n\r\n    function signInWithGoogleEvent(event) \r\n    { \r\n        event.preventDefault();\r\n        signInWithGoogle();}\r\n\r\n  return (\r\n    <>\r\n\r\n<Container className=\"d-flex alighn-items-center justify-content-center mt-5\" style={{ minHeight: \"100vh\" }}>\r\n                <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center\">Sign In</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" ref={emailRef} required placeholder=\"E.g: example@gmail.com\"></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\" >Sign In</Button>\r\n                            </Form>\r\n                            <p className=\"text-center my-3\">or</p>\r\n                            <GoogleButton className=\"w-100 text-center mt-3\" onClick = {signInWithGoogleEvent}/>\r\n                            <div className=\"w-100 text-center mt-3\">\r\n                                <Link to={ROUTES.PASSWORD_FORGET} >Forgot Password</Link>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        Need an account? <Link to={ROUTES.CREATE_USER} >Sign Up</Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </Container >\r\n        \r\n    {/* <div className=\"mt-8\">\r\n      <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign In</h1>\r\n      <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n        {error !== null && <div className = \"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\r\n        <form className=\"\">\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value = {email}\r\n            placeholder=\"E.g: faruq123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value = {password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" onClick={signInWithEmailAndPasswordHandler}>\r\n            Sign in\r\n          </button>\r\n        </form>\r\n        <p className=\"text-center my-3\">or</p>\r\n        <button className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\" onClick = {signInWithGoogleEvent}> Sign in with Google</button>\r\n\r\n        <p className=\"text-center my-3\">Don't have an account?{\" \"}\r\n          <Link to={ROUTES.CREATE_USER} className=\"text-blue-500 hover:text-blue-600\">Sign up here</Link>{\" \"}<br />{\" \"}\r\n          <Link to = \"passwordReset\" className=\"text-blue-500 hover:text-blue-600\">Forgot Password?</Link>\r\n        </p>\r\n      </div>\r\n    </div> */}\r\n  </>\r\n  );\r\n};\r\nexport default SignIn;","import React, { useRef, useState, Component} from 'react';\r\nimport { Form, Button, Card, Alert, Container } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from \"@reach/router\";\r\nimport * as ROUTES from '../constants/routes';\r\nimport {createNewUser} from '../utils/firestore';\r\nimport Select from 'react-select';\r\n\r\nexport default function CreateUser() {\r\n    const emailRef = useRef();\r\n    const displayNameRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState([]);\r\n\r\n      const options = [\r\n        { value: 'admin', label: 'Admin' },\r\n        { value: 'manager', label: 'Manager' },\r\n        { value: 'worker', label: 'Worker' }\r\n      ]\r\n          const history = useHistory;\r\n\r\n        //   const handleToggle = ({ target }) =>\r\n        //   setRoles(s => ({ ...s, [target.name]: !s[target.name] }));\r\n        \r\n  \r\n\r\n    const handleSelect = (e) => {\r\n        let rolesArray=[];\r\n        let admin=false;\r\n        let manager=false;\r\n        let worker = false;\r\n           e.forEach(element => {\r\n               if(element.value==='admin'){\r\n                   admin= true;\r\n               }\r\n               else if(element.value==='manager'){\r\n                manager= true;\r\n            }\r\n               else{\r\n                worker= true;\r\n            }\r\n            });\r\n\r\n            rolesArray.push(admin);\r\n            rolesArray.push(manager);\r\n            rolesArray.push(worker);\r\n            console.log(rolesArray);\r\n         \r\n            setSelectedValue(rolesArray);\r\n      }\r\n  \r\n    async function handleSubmit(e) {\r\n        console.log(\"button\");\r\n        e.preventDefault();\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n\r\n        }\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            let userError=createNewUser(displayNameRef.current.value, emailRef.current.value, passwordRef.current.value,selectedValue)\r\n            \r\n            userError.then(\r\n                function(value) {\r\n                    if(value.message !=undefined)\r\n                        setError(value.message);\r\n                     },\r\n                 function(error) {\r\n                     setError(error.message);\r\n                         }\r\n            )\r\n            \r\n             // history.push(\"/\");\r\n        } catch(error) {\r\n            setError(error.message);\r\n            console.log(error);\r\n        }\r\n        setLoading(false);\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Container className=\"d-flex alighn-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n                <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center\">Create New User</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"displayName\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Form.Control type=\"text\" ref={displayNameRef} required></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password-confirm\">\r\n                                    <Form.Label>Password Confirmation</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordConfirmRef} required></Form.Control>\r\n                                </Form.Group>\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\" >Register User</Button>\r\n                                <Form.Group id=\"roles\">\r\n                                    <Form.Label>User Role</Form.Label>\r\n                                    <Select options={options} \r\n                                            isMulti\r\n                                            className=\"basic-multi-select\"\r\n                                            onChange={handleSelect}\r\n                                            />\r\n                                {/* {Object.keys(roles).map(key => (\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={handleToggle}\r\n                                        key={key}\r\n                                        name={key}\r\n                                        checked={roles[key]}\r\n                                    />))} */}\r\n                                    {selectedValue && <div style={{ marginTop: 20, lineHeight: '25px' }}>\r\n        <div><b>Selected Value: </b> {JSON.stringify(selectedValue, null, 2)}</div>\r\n      </div>}\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        Already have an account? <Link to={ROUTES.SIGN_IN} >Log In</Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { Component, createContext } from \"react\";\r\nimport { auth, generateUserDocument } from \"../utils/firestore\";\r\n \r\nexport const UserContext = createContext({ user: null });\r\n\r\nclass UserProvider extends Component {\r\n  state = {\r\n    user: null\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    auth.onAuthStateChanged(async  userAuth => {\r\n      const user = await generateUserDocument(userAuth);\r\n      this.setState({ user });\r\n      console.log(user);\r\n\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={this.state.user}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\nexport default UserProvider;","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../../providers/UserProvider\";\r\nimport {auth} from \"../../utils/firestore\";\r\n\r\nconst ProfilePage = () => {\r\n\r\n  const user = useContext(UserContext);\r\n  const {photoURL, displayName, email} = user;\r\n  return (\r\n    <div className = \"mx-auto w-11/12 md:w-2/4 py-8 px-4 md:px-8\">\r\n    <div className=\"flex border flex-col items-center md:flex-row md:items-start border-blue-400 px-3 py-4\">\r\n      <div\r\n        style={{\r\n          background: `url(${photoURL || 'https://res.cloudinary.com/dqcsk8rsc/image/upload/v1577268053/avatar-1-bitmoji_upgwhc.png'})  no-repeat center center`,\r\n          backgroundSize: \"cover\",\r\n          height: \"200px\",\r\n          width: \"200px\"\r\n        }}\r\n        className=\"border border-blue-300\"\r\n      ></div>\r\n      <div className = \"md:pl-4\">\r\n      <h2 className = \"text-2xl font-semibold\">{displayName}</h2>\r\n      <h3 className = \"italic\">{email}</h3>\r\n      </div>\r\n    </div>\r\n    <button className = \"w-full py-3 bg-red-600 mt-4 text-white\" onClick = {() => {auth.signOut()}}>Sign out</button>\r\n  </div>\r\n  ) \r\n};\r\nexport default ProfilePage;","import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    }\r\n  };\r\n  const sendResetEmail = event => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <h1 className=\"text-xl text-center font-bold mb-3\">\r\n        Reset your Password\r\n      </h1>\r\n      <div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n        <form action=\"\">\r\n          {emailHasBeenSent && (\r\n            <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n              An email has been sent to you!\r\n            </div>\r\n          )}\r\n          {error !== null && (\r\n            <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          <label htmlFor=\"userEmail\" className=\"w-full block\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            id=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"Input your email\"\r\n            onChange={onChangeHandler}\r\n            className=\"mb-3 w-full px-1 py-2\"\r\n          />\r\n          <button\r\n            className=\"w-full bg-blue-400 text-white py-3\"\r\n          >\r\n            Send me a reset link\r\n          </button>\r\n        </form>\r\n        <Link\r\n         to =\"/\"\r\n          className=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\r\n        >\r\n          &larr; back to sign in page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordReset;\r\n\r\n// const sendResetEmail = event => {\r\n//   event.preventDefault();\r\n//   auth\r\n//     .sendPasswordResetEmail(email)\r\n//     .then(() => {\r\n//       setEmailHasBeenSent(true);\r\n//       setTimeout(() => {setEmailHasBeenSent(false)}, 3000);\r\n//     })\r\n//     .catch(() => {\r\n//       setError(\"Error resetting password\");\r\n//     });\r\n// };","import React, { useRef, useState, Component} from 'react';\r\nimport { Form, Button, Card, Alert, Container } from 'react-bootstrap'\r\nimport { Link } from \"@reach/router\";\r\nimport * as ROUTES from '../constants/routes';\r\nimport {sendSignInLink, signInWithEmail_link} from '../utils/firestore';\r\n\r\n\r\nexport default function EmailLink() {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n  \r\n      async function handleSubmit(e) {\r\n        e.preventDefault();     \r\n  \r\n        try {\r\n         \r\n            await signInWithEmail_link();\r\n            // history.push(\"/\");\r\n        } catch(e) {\r\n            setError('Failed to sign in');\r\n            console.log(\"Sign in eror\");\r\n            console.log(e.message);\r\n        }\r\n  \r\n    }\r\n\r\n    async function sendLink(e) {\r\n        e.preventDefault();\r\n\r\n        var actionCodeSettings = {\r\n            // URL you want to redirect back to. The domain (www.example.com) for this\r\n            // URL must be in the authorized domains list in the Firebase Console.\r\n            url: 'https://mtt-dev-12744.firebaseapp.com/',\r\n            // This must be true.\r\n            handleCodeInApp: true,\r\n            iOS: {\r\n              bundleId: 'mtt-dev-12744.firebaseapp.com'\r\n            },\r\n            android: {\r\n              packageName: 'https://mtt-dev-12744.firebaseapp.com/',\r\n              installApp: true,\r\n              minimumVersion: '12'\r\n            },\r\n            dynamicLinkDomain: 'mtt-dev-https://mtt-dev-12744.firebaseapp.com/'\r\n          };\r\n  console.log(\"send Link clicked\"+emailRef.current.value);\r\n        try {\r\n            \r\n            await sendSignInLink(emailRef.current.value, actionCodeSettings);\r\n            // history.push(\"/\");\r\n        } catch(e) {\r\n            console.log(\"send sign in error\");\r\nconsole.log(e.message);        }\r\n  \r\n    }\r\n  \r\n  \r\n    return (\r\n        <>\r\n   <Container className=\"d-flex alighn-items-center justify-content-center mt-5\" style={{ minHeight: \"100vh\" }}>\r\n                <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center\">Email Link</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" ref={emailRef} required placeholder=\"E.g: example@gmail.com\"></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordRef} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button  className=\"w-100\" type=\"submit\" >Sign In</Button>\r\n                            </Form>\r\n                            <Form onSubmit={sendLink}>\r\n                               \r\n\r\n                                <Button  className=\"w-100\" type=\"submit\" >Send Link</Button>\r\n                            </Form>\r\n                            <p className=\"text-center my-3\">or</p>\r\n                            <div className=\"w-100 text-center mt-3\">\r\n                                <Link to={ROUTES.PASSWORD_FORGET} >Forgot Password</Link>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        Need an account? <Link to={ROUTES.CREATE_USER} >Sign Up</Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </Container >\r\n    </>\r\n    );\r\n}","import React , { useContext, useState } from 'react';\r\nimport { Router } from \"@reach/router\";\r\nimport SignIn from \"../SignIn\";\r\nimport CreateUser from \"../CreateUser\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport PasswordReset from \"./PasswordReset\";\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Navbar, Nav, Button, NavDropdown } from 'react-bootstrap'\r\nimport { UserContext } from \"../../providers/UserProvider\";\r\nimport {auth} from \"../../utils/firestore\";\r\nimport { Route } from 'react-router-dom';\r\nimport EmailLink from '../EmailLink'\r\n\r\nconst Firebase = () => {\r\n  \r\n\r\n    const user = useContext(UserContext);\r\n    return (\r\n\r\n        \r\n          user ?\r\n          <>\r\n          <NavigationAuth/>\r\n            { user.roles.manager && <ProfilePage /> || user.roles.admin && <ProfilePage /> || user.roles.worker && <ProfilePage />}\r\n\r\n          </>\r\n          \r\n        :\r\n        <>\r\n          <NavigationNonAuth/>\r\n          <Router>\r\n            <CreateUser path={ROUTES.CREATE_USER} />\r\n            <SignIn path={ROUTES.SIGN_IN} />\r\n            <PasswordReset path = {ROUTES.PASSWORD_FORGET} />\r\n            <CreateUser path={ROUTES.CREATE_USER}/>\r\n            <EmailLink path={ROUTES.EMAIL_LINK}/>\r\n             {/* <Route exact path={ROUTES.LANDING} component={LandingPage} /> */}\r\n            {/* <Route path={ROUTES.CREATE_USER} component={CreateUser} />\r\n            <Route path={ROUTES.SIGN_IN} component={SignIn} /> */}\r\n            {/* <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} /> */}\r\n            {/* <Route path={ROUTES.HOME} component={HomePage} />\r\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n            <Route path={ROUTES.ADMIN} component={AdminPage} /> */}\r\n            \r\n          </Router>\r\n        </>\r\n    );\r\n}\r\nconst NavigationAuth = () => {\r\n     \r\n  return (\r\n      <>\r\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n              <Navbar.Brand href={ROUTES.SIGN_IN}>React-Bootstrap</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                      <Nav.Link href=\"#features\">Features</Nav.Link>\r\n                      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                      <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                          <NavDropdown.Item href={ROUTES.SIGN_IN}>LOGIN</NavDropdown.Item>\r\n                          <NavDropdown.Item href={ROUTES.CREATE_USER}>SIGN UP</NavDropdown.Item>\r\n                          <NavDropdown.Divider />\r\n                          <NavDropdown.Item href={ROUTES.CALENDAR_T}>CALENDAR t </NavDropdown.Item>                          \r\n                      </NavDropdown>\r\n                  </Nav>\r\n                  <Nav>\r\n                      <Nav.Link ><Button variant=\"link\" onClick = {() => {auth.signOut()}}>Log Out</Button>\r\n                      </Nav.Link>\r\n                      <Nav.Link eventKey={2} href=\"#memes\">\r\n                          Dank memes\r\n                   </Nav.Link>\r\n                  </Nav>\r\n              </Navbar.Collapse>\r\n          </Navbar>\r\n      </>\r\n  )\r\n}\r\nconst NavigationNonAuth = () => {\r\n\r\n\r\n  return(\r\n  <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href={ROUTES.SIGN_IN}>React-Bootstrap</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#features\">Features</Nav.Link>\r\n              <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href={ROUTES.SIGN_IN}>LOGIN</NavDropdown.Item>\r\n                  <NavDropdown.Item href={ROUTES.CREATE_USER}>SIGN UP</NavDropdown.Item>\r\n                  <NavDropdown.Item href={ROUTES.CALENDAR}>CALENDAR</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href={ROUTES.CALENDAR_T}>CALENDAR t </NavDropdown.Item>\r\n              </NavDropdown>\r\n          </Nav>\r\n          <Nav>\r\n              <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                   </Nav.Link>\r\n          </Nav>\r\n      </Navbar.Collapse>\r\n  </Navbar>)\r\n}\r\n\r\nexport default Firebase;","import React from 'react';\r\nimport Firebase from './Firebase/Firebase'\r\nimport {  BrowserRouter as Router,  Route, } from 'react-router-dom';\r\nimport CreateUser from './CreateUser';\r\nimport SignIn from './SignIn';\r\nimport UserProvider from '../providers/UserProvider';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nconst App = () => (\r\n  <UserProvider> \r\n      <Firebase/>\r\n  </UserProvider>\r\n);\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createSlice} from '@reduxjs/toolkit'\r\nconst calendarSlice = createSlice({\r\n    name: \"calendar\",\r\n    initialState: {\r\n        date: \"\",\r\n        week: 0,\r\n        calendarTitle: \"\",\r\n        viewType: \"MONTH\"\r\n    },\r\n    reducers: {\r\n     /* increment: state => ({...state, count: state.count + 1}),\r\n      decrement: state => ({...state, count: state.count - 1}),*/\r\n      currentDateAction: (state,action) =>\r\n      {\r\n          const { newDate} = action.payload;\r\n          state.date = newDate;\r\n      },\r\n      selectedWeekAction: (state,action) =>\r\n      {\r\n          const { newWeek} = action.payload;\r\n          state.week = newWeek;\r\n      },\r\n      currentTitleAction: (state,action) =>\r\n      {\r\n          const { newTitle} = action.payload;\r\n          state.calendarTitle = newTitle;\r\n      },\r\n      currentViewAction: (state,action) =>\r\n      {\r\n          const { newView} = action.payload;\r\n          state.viewType = newView;\r\n      }\r\n    }\r\n  });\r\n\r\nexport const {currentDateAction, selectedWeekAction, currentTitleAction, currentViewAction} = calendarSlice.actions;\r\nexport default calendarSlice.reducer;","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport  calendarSlice from \"./CalendarSlice\"\r\n\r\nconst reducer = combineReducers({\r\n    calendar:  calendarSlice,\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/configureStore';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}