[{"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\index.js":"1","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\reportWebVitals.js":"2","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\App.js":"3","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\redux\\configureStore.js":"4","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Calendar.js":"5","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\constants\\routes.js":"6","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\redux\\CalendarSlice.js":"7","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\CalendarWeekView.js":"8","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\CalendarMonthView.js":"9","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\utils\\calendar.js":"10","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\constants\\roles.js":"11","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\utils\\firestore.js":"12","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Firebase\\ProfilePage.js":"13","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Firebase\\PasswordReset.js":"14","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\SignIn\\SignIn.js":"15","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\SignUp\\SignUp.js":"16","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\providers\\UserProvider.jsx":"17","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Firebase\\Firebase.js":"18"},{"size":696,"mtime":1613474499346,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1611741895236,"results":"21","hashOfConfig":"20"},{"size":230,"mtime":1613478146804,"results":"22","hashOfConfig":"20"},{"size":263,"mtime":1612888330159,"results":"23","hashOfConfig":"20"},{"size":5763,"mtime":1612902555122,"results":"24","hashOfConfig":"20"},{"size":326,"mtime":1613479059731,"results":"25","hashOfConfig":"20"},{"size":1133,"mtime":1612901299790,"results":"26","hashOfConfig":"20"},{"size":2247,"mtime":1612901771517,"results":"27","hashOfConfig":"20"},{"size":2482,"mtime":1612889677037,"results":"28","hashOfConfig":"20"},{"size":5865,"mtime":1612901188211,"results":"29","hashOfConfig":"20"},{"size":31,"mtime":1613471376473,"results":"30","hashOfConfig":"20"},{"size":2977,"mtime":1613515400121,"results":"31","hashOfConfig":"20"},{"size":1155,"mtime":1613477939032,"results":"32","hashOfConfig":"20"},{"size":1922,"mtime":1613473402618,"results":"33","hashOfConfig":"20"},{"size":2968,"mtime":1613515390179,"results":"34","hashOfConfig":"20"},{"size":3797,"mtime":1613509275704,"results":"35","hashOfConfig":"20"},{"size":672,"mtime":1613509268959,"results":"36","hashOfConfig":"20"},{"size":3760,"mtime":1613511412424,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1l00f0d",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\index.js",[],["83","84"],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\reportWebVitals.js",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\App.js",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\redux\\configureStore.js",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Calendar.js",["85","86","87","88"],"import React, { useState, useEffect } from 'react';\r\nimport '../assets/css/Calendar.css';\r\nimport CalendarMonthView from './CalendarMonthView'\r\nimport CalendarWeekView from './CalendarWeekView'\r\nimport { Button, Dropdown, DropdownButton} from 'react-bootstrap'\r\nimport { MdKeyboardArrowRight, MdKeyboardArrowLeft} from 'react-icons/md';\r\nimport {currentDateAction, selectedWeekAction} from \"../redux/CalendarSlice\"\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Select from 'react-select';\r\nexport default function Calendar() {\r\n  \r\n  \r\n    const {date,week,calendarTitle}  = useSelector((state) => state.calendar);\r\n    let calendarViewData =\r\n    [\r\n        { value: \"MONTH\", label: 'Month' },\r\n        { value: \"WEEK\", label: 'Week' },\r\n        { value: \"DAY\", label: 'Day' }\r\n    ]\r\n    const [activeView, setActiveView] = useState(\"MONTH\");\r\n    const dispatch = useDispatch();\r\n  \r\n    useEffect(()=>{\r\n        let today = new Date();\r\n        dispatch(currentDateAction({newDate: today.toString()}))\r\n        }, []);\r\n\r\n    const prevBtn = () =>{\r\n        switch(activeView)\r\n        {\r\n            case \"MONTH\":\r\n                {\r\n                    monthViewChange(false);\r\n                    break;\r\n                }\r\n            case \"WEEK\":\r\n                {\r\n                    console.log(activeView);\r\n                    weekViewChange(false);\r\n                    break;\r\n                }\r\n            case \"day\":\r\n                {\r\n\r\n                    break;\r\n                }\r\n            default:\r\n                {\r\n                    monthViewChange(false);\r\n                    break;\r\n                }\r\n        }\r\n    }\r\n    const nextBtn = () => {\r\n        switch(activeView)\r\n        {\r\n            case \"MONTH\":\r\n                {\r\n                    monthViewChange(true);\r\n                    break;\r\n                }\r\n            case \"WEEK\":\r\n                {\r\n                    weekViewChange(true);\r\n                    break;\r\n                }\r\n            case \"day\":\r\n                {\r\n                    break;\r\n                }\r\n            default:\r\n                {\r\n                    monthViewChange(true);\r\n                    break;\r\n                }\r\n        }\r\n    }\r\n    const todayBtn = () => {\r\n        let today = new Date();\r\n        today.setHours(0,0,0,0);\r\n        today.setDate(1);\r\n        let storedDate = new Date(date);\r\n        storedDate.setHours(0,0,0,0);\r\n        if(today.getTime() !== storedDate.getTime())\r\n        {\r\n            dispatch(currentDateAction({newDate: today.toString()}));\r\n            if(activeView === \"WEEK\")\r\n            {\r\n                dispatch(selectedWeekAction({newWeek: 0}));\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    const handleDropdownChange = selectedOption => {\r\n        if(activeView !== selectedOption.value)\r\n        {\r\n            setActiveView(selectedOption.value);\r\n        }\r\n      };\r\n    const monthViewChange = type =>{\r\n        //true next button was pressed\r\n        dispatch(selectedWeekAction({newWeek: 0}));\r\n        if(type)\r\n        {\r\n            let updatedDate = new Date(date);\r\n            updatedDate.setDate(1);\r\n            updatedDate.setMonth(new Date(date).getMonth() + 1);\r\n            dispatch(currentDateAction({newDate: updatedDate.toString()}))\r\n        }\r\n        else\r\n        {\r\n            let updatedDate = new Date(date);\r\n            updatedDate.setDate(1);\r\n            updatedDate.setMonth(new Date(date).getMonth() - 1);\r\n            dispatch(currentDateAction({newDate: updatedDate.toString()}));\r\n        }\r\n    }\r\n    const weekViewChange = type =>{\r\n        if(type)\r\n        {\r\n            dispatch(selectedWeekAction({newWeek: week+1}));\r\n        }\r\n        else\r\n        {\r\n            dispatch(selectedWeekAction({newWeek: week-1}));\r\n        }\r\n    }\r\n    return (\r\n    <>\r\n    {/* Calendar Tools */}\r\n    <div className=\"calendar-tools\">\r\n        <div className=\"row text-center \">\r\n            <div className=\"col-9 \">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2 order-2 order-md-1 my-col\">\r\n                        <Button onClick={() => prevBtn()} variant=\"outline-info\" className=\"text-uppercase font-weight-bold calendar-tools-arrows px-sm-3 px-md-4 px-lg-5\"><MdKeyboardArrowLeft /></Button>\r\n                    </div>\r\n                    <div className=\"col-2  order-4 order-md-2 my-col\">\r\n                        <Button onClick={() => nextBtn()} variant=\"outline-info\" className=\"text-uppercase font-weight-bold calendar-tools-arrows px-sm-3 px-md-4 px-lg-5\"><MdKeyboardArrowRight /></Button>\r\n                    </div>\r\n                    <div className=\"col-3  order-1 order-md-3 my-col\">\r\n                        <Button onClick={() => todayBtn()} variant=\"outline-info\" className=\"text-uppercase font-weight-bold calendar-tools-today px-sm-3 px-lg-5 px-md-4\">TODAY</Button>\r\n                    </div>\r\n                    <div className=\"col-5  order-3 order-md-4  my-col calendar-tools-date\">\r\n                        <h4 className=\"text-uppercase font-weight-bold mt-1\">{calendarTitle}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <div>\r\n                    <Select variant=\"info\" className=\"text-uppercase font-weight-bold calendar-tools-dropdown\"  onChange={handleDropdownChange} options={calendarViewData} defaultValue={{ value: calendarViewData[0].value }, { label: calendarViewData[0].label }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div> {activeView === 'MONTH' && <CalendarMonthView />}\r\n    {activeView === 'WEEK' && <CalendarWeekView />}</div>\r\n    </>\r\n    )\r\n}\r\n\r\n",["89","90"],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\constants\\routes.js",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\redux\\CalendarSlice.js",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\CalendarWeekView.js",["91"],"import React, { useState, useEffect } from 'react';\r\nimport {Table} from 'react-bootstrap'\r\nimport store from '../redux/configureStore';\r\nimport {currentTitleAction, selectedWeekAction, currentDateAction} from \"../redux/CalendarSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport watch from 'redux-watch';\r\nimport {createWeekCalendar, getDatesFromWeekNo} from '../utils/calendar'\r\nimport '../assets/css/Calendar.css';\r\nexport default function CalendarWeekView() {\r\n\r\n\r\n  const [weekCalendar, setWeekCalendar] = useState(\"\");\r\n  const {week,date} = useSelector((state) => state.calendar);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n    if(week === 0)\r\n    {\r\n        let firstDay = new Date(date);\r\n        renderCalendar(firstDay.getWeekNumber()); \r\n    }\r\n    else\r\n        renderCalendar(week); \r\n    \r\n    let w = watch(store.getState, 'calendar.week');\r\n    const unsubscribe = store.subscribe(w((newVal, oldVal, objectPath) => \r\n    {\r\n        if(newVal !== oldVal)\r\n            renderCalendar(newVal);\r\n    }));\r\n    return () => {\r\n        unsubscribe();\r\n    }\r\n    }, [])\r\n\r\n    const renderCalendar = (weekNumber) =>\r\n    {\r\n        if(weekNumber === 0)\r\n        {\r\n            let firstDay = new Date(date);\r\n            weekNumber = firstDay.getWeekNumber(); \r\n        }\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        let firstWeekDay = getDatesFromWeekNo(weekNumber,new Date(date).getFullYear());\r\n        let lastWeekDay = new Date(firstWeekDay);\r\n        lastWeekDay.setDate(lastWeekDay.getDate()+6);\r\n        dispatch(currentTitleAction({newTitle: firstWeekDay.toLocaleDateString(undefined, options)+ \" - \" + lastWeekDay.toLocaleDateString(undefined, options)}));\r\n        dispatch(selectedWeekAction({newWeek: weekNumber}));\r\n        dispatch(currentDateAction({newDate: firstWeekDay.toString()}));\r\n        setWeekCalendar(createWeekCalendar(firstWeekDay));\r\n    }\r\n\r\n       return (\r\n        <>\r\n          <div className=\"mt-5 week\">\r\n                    <Table bordered responsive=\"md\" className=\"month\" dangerouslySetInnerHTML={{__html: weekCalendar}}>\r\n                    </Table>\r\n                   \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\CalendarMonthView.js",["92"],"import React, { useState, useEffect } from 'react';\r\nimport '../assets/css/Calendar.css';\r\nimport {createCalendarDays} from '../utils/calendar.js';\r\nimport {Table} from 'react-bootstrap';\r\nimport store from '../redux/configureStore';\r\nimport {currentTitleAction} from \"../redux/CalendarSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport watch from 'redux-watch';\r\nexport default function CalendarMonthView() {\r\n\r\n    //titleText needs to be same name as a slice initial state\r\n    const {date}  = useSelector((state) => state.calendar);\r\n    const dispatch = useDispatch();\r\n    const monthNames = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",];\r\n  \r\n    const [daysHTML, setDaysHTML] = useState(\"\");\r\n\r\n    // store is THE redux store\r\n    \r\n    useEffect(()=>{\r\n        renderCalendar(new Date(date));\r\n        let w = watch(store.getState, 'calendar.date');\r\n        const unsubscribe = store.subscribe(w((newVal, oldVal, objectPath) => \r\n        {\r\n            if(newVal !== oldVal)\r\n                renderCalendar(new Date(newVal));\r\n        }));\r\n    return () => {\r\n        unsubscribe();\r\n    }\r\n    }, [])\r\n\r\n    const renderCalendar = (updatedDate) =>\r\n    {\r\n        dispatch(currentTitleAction({newTitle: monthNames[updatedDate.getMonth()] + \" \" + updatedDate.getFullYear()}))\r\n        setDaysHTML(createCalendarDays(updatedDate));\r\n    }\r\n  \r\n       return (\r\n        <>\r\n            <div className=\"mt-5 calendar\">\r\n                    <Table bordered responsive=\"md\" className=\"month\">\r\n                        <thead className=\"text-uppercase text-center\">\r\n                            <tr>\r\n                                <th>Week no.</th>\r\n                                <th>Mon</th>\r\n                                <th>Tue</th>\r\n                                <th>Wed</th>\r\n                                <th>Thu</th>\r\n                                <th>Fri</th>\r\n                                <th>Sat</th>\r\n                                <th>Sun</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody dangerouslySetInnerHTML={{__html: daysHTML}}>\r\n                           \r\n\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\utils\\calendar.js",["93"],"export const createCalendarDays = (updatedDate) => {\r\n    \r\n    //get number of days in the current month\r\n    const lastDay = new Date(\r\n        updatedDate.getFullYear(),\r\n        updatedDate.getMonth() + 1,\r\n        0\r\n    ).getDate();\r\n\r\n    //get number of days in previous month\r\n    const prevLastDay = new Date(\r\n        updatedDate.getFullYear(),\r\n        updatedDate.getMonth(),\r\n        0\r\n    ).getDate();\r\n\r\n    //get number for name of the day for current month -> 0 = sunday .... 6 = saturday\r\n    let firstDayIndex = updatedDate.getDay();\r\n    //logic to put sunday as last(6) and monday as first(0)\r\n    if (firstDayIndex === 0)\r\n        firstDayIndex = 6;\r\n    else\r\n        firstDayIndex--;\r\n\r\n    let totalDays = lastDay;\r\n    let numberOfPrintedDays = 0;\r\n    let numberOfPrintedWeekends = 0;\r\n    let weekNumbersFromDate;\r\n    if(firstDayIndex>0)\r\n    {\r\n        weekNumbersFromDate = new Date(\r\n            updatedDate.getFullYear(),\r\n            updatedDate.getMonth()-1,\r\n            prevLastDay - firstDayIndex +1\r\n        );\r\n    }\r\n    else\r\n    {\r\n        weekNumbersFromDate = new Date(\r\n            updatedDate.getFullYear(),\r\n            updatedDate.getMonth(),\r\n            1\r\n        );\r\n    }\r\n    let weekNumbers = getWeekNumbers(weekNumbersFromDate);\r\n    let days = `<tr>  <td>\r\n    <div className=\"day-field\" style=\"font-weight: bold;\">${weekNumbers[numberOfPrintedWeekends]}</div> <div className=\"events-wrapper\">\r\n    </div> </td>`\r\n    numberOfPrintedWeekends++;\r\n    //loop for creating previous month date numbers\r\n    for (let x = firstDayIndex; x > 0; x--) {\r\n        days += `<td> <div style=\"color:#E8E8E8;\" className=\"day-field\">${prevLastDay - x + 1}</div>\r\n        <div className=\"events-wrapper\"></div></td>`;\r\n        totalDays++;\r\n        numberOfPrintedDays++;\r\n    }\r\n    //loop for creating curent month date numbers\r\n    for (let i = 1; i <= lastDay; i++) {\r\n        if(numberOfPrintedDays%7===0 && numberOfPrintedDays !== 0)\r\n        {\r\n            days += `</tr> <tr> <td>\r\n            <div className=\"day-field\" style=\"font-weight: bold;\">${weekNumbers[numberOfPrintedWeekends]}</div> <div className=\"events-wrapper\">\r\n            </div> </td>`;\r\n            numberOfPrintedWeekends++;  \r\n        } \r\n        if ( i === new Date().getDate() && updatedDate.getMonth() === new Date().getMonth())\r\n        {\r\n            days += `<td className=\"today\">\r\n            <div className=\"day-field\">${i}</div> <div className=\"events-wrapper\">\r\n            </div> </td>`;\r\n        }\r\n        else\r\n        {\r\n            days += `<td>\r\n            <div className=\"day-field\">${i}</div> <div className=\"events-wrapper\">\r\n            </div> </td>`;\r\n        }\r\n        \r\n      \r\n        numberOfPrintedDays++;\r\n    }\r\n    //loop for creating next month date numbers\r\n    for (let j = 1; j <= 42 - totalDays; j++) {\r\n        if(numberOfPrintedDays%7===0)\r\n        {\r\n            days += `</tr> <tr> <td>\r\n            <div className=\"day-field\" style=\"font-weight: bold;\">${weekNumbers[numberOfPrintedWeekends]}</div> <div className=\"events-wrapper\">\r\n            </div> </td>`;\r\n            numberOfPrintedWeekends++;\r\n        }\r\n        days += `<td className=\"disabled\">\r\n        <div className=\"day-field\" style=\"color:#E8E8E8;\">${j}</div> <div className=\"events-wrapper\">\r\n        </div> </td>`;\r\n        numberOfPrintedDays++;\r\n    }\r\n    days += `</tr>`;\r\n\r\n    return days;\r\n}\r\nconst getWeekNumbers = date =>{\r\n    \r\n    let weekNumbers=[];\r\n    for (let a = 0; a < 6; a++) {\r\n        weekNumbers.push(date.getWeekNumber());\r\n        date.setDate(date.getDate() + 7);    \r\n    }\r\n   return weekNumbers;   \r\n}\r\nDate.prototype.getWeekNumber = function() {\r\n    var date = new Date(this.getTime());\r\n  date.setHours(0, 0, 0, 0);\r\n  // Thursday in current week decides the year.\r\n  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n  // January 4 is always in week 1.\r\n  var week1 = new Date(date.getFullYear(), 0, 4);\r\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1.\r\n  return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000\r\n                        - 3 + (week1.getDay() + 6) % 7) / 7);\r\n}\r\n\r\nexport const createWeekCalendar = (updateDate) => \r\n{\r\n    \r\n   \r\n    let weekday = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    let weekCalendar = `<thead className=\"text-uppercase text-center\"> <tr>`\r\n    var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    //generate name of the days and date\r\n    let tempDate = new Date(updateDate);\r\n    for(let a = 0; a<7;a++)\r\n    {\r\n        if(a===0)\r\n            weekCalendar += `<th>${tempDate.getWeekNumber()}</th><th>${weekday[tempDate.getDay()]} ${updateDate.getDate()}`\r\n        else\r\n            weekCalendar += `<th>${weekday[tempDate.getDay()]} ${tempDate.getDate()}`\r\n        tempDate.setDate(tempDate.getDate() + 1);\r\n    }\r\n    weekCalendar += `</tr> </thead><tbody>`\r\n\r\n    for(let b=0;b<24;b++)\r\n    {\r\n        weekCalendar += `<tr><th className=\"hour-field\">${b}:00</th>`\r\n        tempDate = new Date(updateDate);\r\n        for(let c=0;c<7;c++)\r\n        {\r\n            weekCalendar += `<td data-date-time=\"${tempDate.toLocaleDateString(undefined, options)} ${b}:00>\r\n            <div className=\"event event-short\"></div></td>`\r\n            tempDate.setDate(tempDate.getDate() + 1);\r\n        }\r\n    }\r\n    weekCalendar += `</tr></tbody>`\r\n    return weekCalendar;\r\n}\r\nexport const getDatesFromWeekNo = (weekNumber,year) =>{\r\n\r\n    var simple = new Date(year, 0, 1 + (weekNumber - 1) * 7);\r\n    var dow = simple.getDay();\r\n    var ISOweekStart = simple;\r\n    if (dow <= 4)\r\n        ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\r\n    else\r\n        ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\r\n    return ISOweekStart;\r\n\r\n}\r\n\r\n\r\n","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\constants\\roles.js",[],["94","95"],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\utils\\firestore.js",["96"],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Firebase\\ProfilePage.js",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Firebase\\PasswordReset.js",["97","98","99"],"import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    }\r\n  };\r\n  const sendResetEmail = event => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <h1 className=\"text-xl text-center font-bold mb-3\">\r\n        Reset your Password\r\n      </h1>\r\n      <div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n        <form action=\"\">\r\n          {emailHasBeenSent && (\r\n            <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n              An email has been sent to you!\r\n            </div>\r\n          )}\r\n          {error !== null && (\r\n            <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          <label htmlFor=\"userEmail\" className=\"w-full block\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            id=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"Input your email\"\r\n            onChange={onChangeHandler}\r\n            className=\"mb-3 w-full px-1 py-2\"\r\n          />\r\n          <button\r\n            className=\"w-full bg-blue-400 text-white py-3\"\r\n          >\r\n            Send me a reset link\r\n          </button>\r\n        </form>\r\n        <Link\r\n         to =\"/\"\r\n          className=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\r\n        >\r\n          &larr; back to sign in page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordReset;","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\SignIn\\SignIn.js",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\SignUp\\SignUp.js",["100"],"import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport {createNewUser} from '../../utils/firestore'\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [roles, setRoles] = useState({\r\n    admin: false,\r\n    manager: false,\r\n    worker: false\r\n  });\r\n  const [error, setError] = useState(null);\r\n\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    } else if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    } else if (name === \"displayName\") {\r\n      setDisplayName(value);\r\n    }\r\n  };\r\n\r\n  const handleToggle = ({ target }) =>\r\n  setRoles(s => ({ ...s, [target.name]: !s[target.name] }));\r\n\r\n  const createUserWithEmailAndPasswordHandler = async (event,displayName,email, password) => {\r\n    event.preventDefault();\r\n    createNewUser(displayName,email,password,generateUserRoles());\r\n   /* setEmail(\"\");\r\n    setPassword(\"\");\r\n    setDisplayName(\"\");*/\r\n  };\r\n  const generateUserRoles = () =>{\r\n\r\n    let rolesArray = [roles.admin,roles.manager,roles.worker]\r\n    console.log(rolesArray);\r\n    return rolesArray;\r\n  }\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\r\n      <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n        {error !== null && (\r\n          <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form className=\"\">\r\n          <label htmlFor=\"displayName\" className=\"block\">\r\n            Display Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"my-1 p-1 w-full \"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            placeholder=\"E.g: Faruq\"\r\n            id=\"displayName\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"E.g: faruq123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          \r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n           {Object.keys(roles).map(key => (\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={handleToggle}\r\n            key={key}\r\n            name={key}\r\n            checked={roles[key]}\r\n          />))}\r\n         \r\n          <button\r\n            className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\r\n            onClick={event => {createUserWithEmailAndPasswordHandler(event,displayName, email, password);}}>Sign up\r\n          </button>\r\n        </form>\r\n        <p className=\"text-center my-3\">or</p>\r\n        <button className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\">Sign in with Google</button>\r\n        <p className=\"text-center my-3\">Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign in here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUp;","D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\providers\\UserProvider.jsx",[],"D:\\school\\Bachelor_project\\marpi-time-tracker\\src\\components\\Firebase\\Firebase.js",["101","102","103","104","105","106","107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":5,"column":18,"nodeType":"115","messageId":"116","endLine":5,"endColumn":26},{"ruleId":"113","severity":1,"message":"117","line":5,"column":28,"nodeType":"115","messageId":"116","endLine":5,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":26,"column":12,"nodeType":"120","endLine":26,"endColumn":14,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":152,"column":222,"nodeType":"124","messageId":"125","endLine":152,"endColumn":223},{"ruleId":"109","replacedBy":"126"},{"ruleId":"111","replacedBy":"127"},{"ruleId":"118","severity":1,"message":"128","line":34,"column":8,"nodeType":"120","endLine":34,"endColumn":10,"suggestions":"129"},{"ruleId":"118","severity":1,"message":"130","line":43,"column":8,"nodeType":"120","endLine":43,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":109,"column":1,"nodeType":"134","messageId":"135","endLine":119,"endColumn":2},{"ruleId":"109","replacedBy":"136"},{"ruleId":"111","replacedBy":"137"},{"ruleId":"122","severity":1,"message":"123","line":75,"column":38,"nodeType":"124","messageId":"125","endLine":75,"endColumn":39},{"ruleId":"113","severity":1,"message":"138","line":6,"column":28,"nodeType":"115","messageId":"116","endLine":6,"endColumn":47},{"ruleId":"113","severity":1,"message":"139","line":7,"column":17,"nodeType":"115","messageId":"116","endLine":7,"endColumn":25},{"ruleId":"113","severity":1,"message":"140","line":14,"column":9,"nodeType":"115","messageId":"116","endLine":14,"endColumn":23},{"ruleId":"113","severity":1,"message":"139","line":13,"column":17,"nodeType":"115","messageId":"116","endLine":13,"endColumn":25},{"ruleId":"113","severity":1,"message":"141","line":14,"column":12,"nodeType":"115","messageId":"116","endLine":14,"endColumn":22},{"ruleId":"113","severity":1,"message":"142","line":14,"column":24,"nodeType":"115","messageId":"116","endLine":14,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":22,"column":31,"nodeType":"145","messageId":"146","endLine":22,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":22,"column":50,"nodeType":"145","messageId":"146","endLine":22,"endColumn":52},{"ruleId":"143","severity":1,"message":"147","line":22,"column":50,"nodeType":"145","messageId":"146","endLine":22,"endColumn":52},{"ruleId":"143","severity":1,"message":"147","line":22,"column":72,"nodeType":"145","messageId":"146","endLine":22,"endColumn":74},{"ruleId":"143","severity":1,"message":"147","line":22,"column":91,"nodeType":"145","messageId":"146","endLine":22,"endColumn":93},{"ruleId":"143","severity":1,"message":"147","line":22,"column":112,"nodeType":"145","messageId":"146","endLine":22,"endColumn":114},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["148"],["149"],"React Hook useEffect has missing dependencies: 'date', 'renderCalendar', and 'week'. Either include them or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'date' and 'renderCalendar'. Either include them or remove the dependency array.",["152"],"no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected",["148"],["149"],"'setEmailHasBeenSent' is assigned a value but never used.","'setError' is assigned a value but never used.","'sendResetEmail' is assigned a value but never used.","'activeView' is assigned a value but never used.","'setActiveView' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [dispatch]",{"range":"159","text":"160"},"Update the dependencies array to be: [date, renderCalendar, week]",{"range":"161","text":"162"},"Update the dependencies array to be: [date, renderCalendar]",{"range":"163","text":"164"},[1037,1039],"[dispatch]",[1112,1114],"[date, renderCalendar, week]",[1319,1321],"[date, renderCalendar]"]